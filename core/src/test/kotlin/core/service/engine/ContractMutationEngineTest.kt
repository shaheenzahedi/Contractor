package core.service.engine

import core.domain.contract.contractor.Contract
import core.domain.ready_to_generate.ReadyToTestModel
import core.service.io.resource.file.FileResource
import core.service.mapper.ContractMapper
import core.service.mapper.JsonMapper
import org.junit.jupiter.api.AfterEach
import org.junit.jupiter.api.BeforeEach
import org.junit.jupiter.api.Test
import kotlin.test.assertNotNull
import kotlin.test.assertNotSame

internal class ContractMutationEngineTest {

    private var contracts: List<ReadyToTestModel>? = null
    lateinit var mutateContract: ContractMutationEngine

    @BeforeEach
    fun setUp() {
        val contractPath = "../sample-contract.json"
        val generalContract = JsonMapper(FileResource()).makeGeneralContract(path = contractPath) as Contract
        contracts = ContractMapper(generalContract).extreactReadyToTestModel()
        mutateContract = ContractMutationEngine(contracts)
    }

    @AfterEach
    fun tearDown() {
    }

    @Test
    fun `Check status mutations generated by the engine is not the same as our status code`() {
        val statusMutations = mutateContract.generateStatusMutation(0)
        val status = contracts?.get(0)?.status
        assertNotNull(status)
        statusMutations?.forEach { assertNotSame(status, it) }
    }
//
//    @Test
//    fun `Check `() {
//
//    }
}